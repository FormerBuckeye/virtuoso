newslice.py
    Main script that does dynamic slicing, control flow dependency calculation,
    replacement of various things by summary functions, and code translation. It
    is probably worth trying to separate this out into libraries in the near
    future.
    
    Useful algorithms include:
        * The dynamic slicing algorithm (function: multislice)
        * An algorithm to check whether a variable is derived from another between
          two program points (function: m_linked_vars)

cfgtools.py
    Some utility functions for creating .dot diagrams of CFGs.

fixedint.py
    Library for fixed-int math in Python.

flow.py
    Functions for post-dominator and control flow dependency analysis.

newmicrodo.py
    Volatility plugin for executing generated introspection programs.

    
predict_insn.py
    Helper functions that predict the next x86 instruction that will be executed.

qemu_data.py
    QEMU-specific data, in particular transfer functions for each micro-op

translate_uop.py
    Rules for translating QEMU micro-ops into python

qemu_trace.py
    Utility functions for reading in traces generated by iFerret/QEMU

summary_functions.py
    Replacement functions for things we edit out of the trace.

util.py
    Currently, just has a function to take a translation block (QEMU equiv.
    of a basic block, more or less) and print the x86 code associated with it.
