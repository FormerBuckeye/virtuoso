1. Control-flow dependencies [Principled] [DONE]
    - Look at system dependence graphs
    - Look at program dependence graphs

2. Memory allocation [HACK] [DONE]
    - Write before read => dynamic allocation
    - Set A0 to new non-conflicting address
        - Do not derive; eliminates deps
    - Hmm, side effect? May move the stack
        - That's probably okay
    - BZZT. Doesn't work this way.
    - Instead, use domain knowledge of memory allocating functions

3. Aliasing (multiple VAs map to same PA) [DONE]
    - Similar approach: force A0 so that all access
      to the buffer goes through the same virtual
      address
    - Just used domain knowledge here too.
    - Update: no more domain knowledge needed: we have physical COW support
      so we can handle page table updates.

4. Add TLB with appropriate invalidation to virtual address layer.
    - Basic caching with dictionary in vtop
    - Checks for cache invalidation in write()
        - Need to check for invalidation at 2 levels: PGD and PT
