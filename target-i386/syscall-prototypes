0 long sys_restart_syscall(void);
1 long sys_exit(int error_code);
2 pid_t fork(void);
3 ssize_t sys_read(unsigned int fd, char __user *buf, size_t count);
4 ssize_t sys_write(unsigned int fd, const char __user *buf, size_t count);
5 long sys_open(const char __user *filename, int flags, int mode);
6 long sys_close(unsigned int fd);
7 long sys_waitpid(pid_t pid, int __user *stat_addr, int options);
8 long sys_creat(const char __user *pathname, int mode);    
9 long sys_link(const char __user *oldname, const char __user *newname);
10 long sys_unlink(const char __user *pathname);
11 int execve(const char *filename, char *const argv[], char *const envp[]);
12 long sys_chdir(const char __user *filename);
13 long sys_time(time_t __user *tloc);
14 long sys_mknod(const char __user *filename, int mode, unsigned dev);
15 long sys_chmod(const char __user *filename, mode_t mode);
16 long sys_lchown(const char __user *filename, unsigned dev);
17 missing sys_break
18 int stat(const char *path, struct stat *buf);
19 off_t sys_lseek(unsigned int fd, off_t offset, unsigned int origin);
20 long sys_getpid(void);
21 long sys_mount(char __user *dev_name, char __user *dir_name, char __user *type, unsigned long flags, void __user *data);
22 long sys_umount(char __user *name, int flags);
23 long sys_setuid(uid_t uid);
24 long sys_getuid(void);
25 long sys_stime(time_t __user *tptr);
26 long sys_ptrace(long request, long pid, long addr, long data);
27 unsigned long sys_alarm(unsigned int seconds);
28 missing sys_oldfstat 
29 long sys_pause(void);
30 long sys_utime(char __user *filename, struct utimbuf __user *times);
31 missing sys_stty
32 missing sys_gtty
33 long sys_access(const char __user *filename, int mode);
34 long sys_nice(int increment);
35 missing sys_ftime 
36 long sys_sync(void);
37 long sys_kill(int pid, int sig);
38 long sys_rename(const char __user *oldname, const char __user *newname);
39 long sys_mkdir(const char __user *pathname, int mode);
40 long sys_rmdir(const char __user *pathname);
41 long sys_dup(unsigned int fildes);
42 int pipe(int pipefd[2]);
43 long sys_times(struct tms __user *tbuf);
44 missing sys_prof
45 unsigned long sys_brk(unsigned long brk);
46 long sys_setgid(gid_t gid);
47 long sys_getgid(void);
48 unsigned long sys_signal(int sig, __sighandler_t handler);
49 long sys_geteuid(void);
50 long sys_getegid(void);
51 long sys_acct(const char __user *name);
52 int umount2(const char *target, int flags);
53 missing sys_lock
54 long sys_ioctl(unsigned int fd, unsigned int cmd, unsigned long arg);
55 long sys_fcntl(unsigned int fd, unsigned int cmd, unsigned long arg);
56 missing sys_mpx 
57 long sys_setpgid(pid_t pid, pid_t pgid);    
58 missing sys_ulimit
59 missing sys_oldolduname 
60 long sys_umask(int mask);
61 long sys_chroot(const char __user *filename);
62 long sys_ustat(unsigned dev, struct ustat __user *ubuf);
63 long sys_dup2(unsigned int oldfd, unsigned int newfd);
64 long sys_getppid(void);
65 long sys_getpgrp(void);
66 long sys_setsid(void);
67 missing sys_sigaction
68 long sys_sgetmask(void);
69 long sys_ssetmask(int newmask);
70 long sys_setreuid(uid_t ruid, uid_t euid);
71 long sys_setregid(gid_t rgid, gid_t egid);
72 missing sys_sigsuspend
73 long sys_sigpending(old_sigset_t __user *set);
74 long sys_sethostname(char __user *name, int len);
75 long sys_setrlimit(unsigned int resource, struct rlimit __user *rlim);
76 long sys_getrlimit(unsigned int resource, struct rlimit __user *rlim);
77 long sys_getrusage(int who, struct rusage __user *ru);
78 long sys_gettimeofday(struct timeval __user *tv, struct timezone __user *tz);
79 long sys_settimeofday(struct timeval __user *tv, struct timezone __user *tz);
80 long sys_getgroups(int gidsetsize, gid_t __user *grouplist);
81 long sys_setgroups(int gidsetsize, gid_t __user *grouplist);
82 long sys_select(int n, fd_set __user *inp, fd_set __user *outp, fd_set __user *exp, struct timeval __user *tvp);
83 long sys_symlink(const char __user *old, const char __user *new);
84 int stat(const char *path, struct stat *buf);
85 long sys_readlink(const char __user *path, char __user *buf, int bufsiz);
86 long sys_uselib(const char __user *library);
87 long sys_swapon(const char __user *specialfile, int swap_flags);
88 long sys_reboot(int magic1, int magic2, unsigned int cmd, void __user *arg);    
89 int readdir(unsigned int fd, struct dirent *dirp, unsigned int count);
90 void *mmap(void *addr, size_t length, int prot, int flags, int fd, off_t offset);
91 long sys_munmap(unsigned long addr, size_t len);
92 long sys_truncate(const char __user *path, unsigned long length);
93 long sys_ftruncate(unsigned int fd, unsigned long length);
94 long sys_fchmod(unsigned int fd, mode_t mode);
95 long sys_fchown(unsigned int fd, uid_t user, gid_t group);
96 long sys_getpriority(int which, int who);
97 long sys_setpriority(int which, int who, int niceval);
98 missing sys_profil
99 long sys_statfs(const char __user * path, struct statfs __user *buf);
100 long sys_fstatfs(unsigned int fd, struct statfs __user *buf);
101 long sys_ioperm(unsigned long from, unsigned long num, int on);
103 long sys_syslog(int type, char __user *buf, int len);
104 long sys_setitimer(int which,  struct itimerval __user *value, struct itimerval __user *ovalue);
105 long sys_getitimer(int which, struct itimerval __user *value);
106 long sys_stat(char __user *filename, struct __old_kernel_stat __user *statbuf);
107 long sys_lstat(char __user *filename, struct __old_kernel_stat __user *statbuf);
108 long sys_fstat(unsigned int fd, struct __old_kernel_stat __user *statbuf);
109 int uname(struct utsname *buf);
110 int iopl(int level);
111 long sys_vhangup(void);
112 int idle(void);
113 int vm86old(struct vm86_struct *info);
114 long sys_wait4(pid_t pid, int __user *stat_addr, int options, struct rusage __user *ru);
115 long sys_swapoff(const char __user *specialfile);
116 long sys_sysinfo(struct sysinfo __user *info);
117 int ipc(unsigned int call, int first, int second, int third, void *ptr, long fifth);
118 long sys_fsync(unsigned int fd);
119 int sigreturn(unsigned long __unused);
120 int clone(int (*fn)(void *), void *child_stack, int flags, void *arg, ...);
121 long sys_setdomainname(char __user *name, int len);
122 int uname(struct utsname *buf);
123 int modify_ldt(int func, void *ptr, unsigned long bytecount);
124 long sys_adjtimex(struct timex __user *txc_p);
125 long sys_mprotect(unsigned long start, size_t len, unsigned long prot);
126 long sys_sigprocmask(int how, old_sigset_t __user *set, old_sigset_t __user *oset);
127 missing sys_create_module 
128 long sys_init_module(void __user *umod, unsigned long len, const char __user *uargs);
129 long sys_delete_module(const char __user *name_user, unsigned int flags);
130 missing sys_get_kernel_syms
131 long sys_quotactl(unsigned int cmd, const char __user *special, qid_t id, void __user *addr);
132 long sys_getpgid(pid_t pid);
133 long sys_fchdir(unsigned int fd);
134 long sys_bdflush(int func, long data);
135 long sys_sysfs(int option, unsigned long arg1, unsigned long arg2);
136 long sys_personality(u_long personality);
137 missing sys_afs_syscall 
138 long sys_setfsuid(uid_t uid);
139 long sys_setfsgid(gid_t gid);
140 missing sys__llseek
141 long sys_getdents(unsigned int fd, struct linux_dirent __user *dirent, unsigned int count);
142 missing sys__newselect 
143 long sys_flock(unsigned int fd, unsigned int cmd);
144 long sys_msync(unsigned long start, size_t len, int flags);
145 ssize_t sys_readv(unsigned long fd, const struct iovec __user *vec, unsigned long vlen);
146 ssize_t sys_writev(unsigned long fd, const struct iovec __user *vec, unsigned long vlen);
147 long sys_getsid(pid_t pid);
148 long sys_fdatasync(unsigned int fd);
149 missing sys__sysctl
150 long sys_mlock(unsigned long start, size_t len);
151 long sys_munlock(unsigned long start, size_t len);
152 long sys_mlockall(int flags);
153 long sys_munlockall(void);
154 long sys_sched_setparam(pid_t pid, struct sched_param __user *param);
155 long sys_sched_getparam(pid_t pid, struct sched_param __user *param);
156 long sys_sched_setscheduler(pid_t pid, int policy, struct sched_param __user *param);
157 long sys_sched_getscheduler(pid_t pid);
158 long sys_sched_yield(void);
159 long sys_sched_get_priority_max(int policy);
160 long sys_sched_get_priority_min(int policy);
161 long sys_sched_rr_get_interval(pid_t pid, struct timespec __user *interval);
162 long sys_nanosleep(struct timespec __user *rqtp, struct timespec __user *rmtp);
163 unsigned long sys_mremap(unsigned long addr, unsigned long old_len, unsigned long new_len, unsigned long flags, unsigned long new_addr);
164 long sys_setresuid(uid_t ruid, uid_t euid, uid_t suid);
165 long sys_getresuid16(old_uid_t __user *ruid, old_uid_t __user *euid, old_uid_t __user *suid);
166 missing sys_vm86 
167 missing sys_query_module 
168 long sys_poll(struct pollfd __user *ufds, unsigned int nfds, long timeout);
169 long sys_nfsservctl(int cmd, struct nfsctl_arg __user *arg, void __user *res);
170 int setresgid(gid_t rgid, gid_t egid, gid_t sgid);
171 long sys_getresgid(gid_t __user *rgid, gid_t __user *egid, gid_t __user *sgid);
172 long sys_prctl(int option, unsigned long arg2, unsigned long arg3, unsigned long arg4, unsigned long arg5);
173 int sigreturn(unsigned long __unused);
174 int sigaction(int signum, const struct sigaction *act, struct sigaction *oldact);
175 int sys_rt_sigprocmask(int how, sigset_t __user *set, sigset_t __user *oset, size_t sigsetsize);
176 long sys_rt_sigpending(sigset_t __user *set, size_t sigsetsize);
177 long sys_rt_sigtimedwait(const sigset_t __user *uthese, siginfo_t __user *uinfo, const struct timespec __user *uts, size_t sigsetsize);
178 long sys_rt_sigqueueinfo(int pid, int sig, siginfo_t __user *uinfo);
179 int sigsuspend(const sigset_t *mask);
180 ssize_t sys_pread64(unsigned int fd, char __user *buf, size_t count, loff_t pos);
181 ssize_t sys_pwrite64(unsigned int fd, const char __user *buf, size_t count, loff_t pos);
182 long sys_chown(const char __user *filename, uid_t user, gid_t group);
183 long sys_getcwd(char __user *buf, unsigned long size);
184 long sys_capget(cap_user_header_t header, cap_user_data_t dataptr);
185 long sys_capset(cap_user_header_t header, const cap_user_data_t data);
186 int sigaltstack(const stack_t *ss, stack_t *oss);
187 ssize_t sys_sendfile(int out_fd, int in_fd, off_t __user *offset, size_t count);
188 missing sys_getpmsg 
189 missing sys_putpmsg 
190 pid_t vfork(void);
191 int getrlimit(int resource, struct rlimit *rlim);
192 void *mmap2(void *addr, size_t length, int prot, int flags, int fd, off_t pgoffset);
193 long sys_truncate64(const char __user *path, loff_t length);
194 long sys_ftruncate64(unsigned int fd, loff_t length);
195 long sys_stat64(char __user *filename, struct stat64 __user *statbuf);
196 long sys_lstat64(char __user *filename, struct stat64 __user *statbuf);
197 long sys_fstat64(unsigned long fd, struct stat64 __user *statbuf);
198 int lchown(const char *path, uid_t owner, gid_t group);
199 uid_t getuid(void);
200 gid_t getgid(void);
201 uid_t geteuid(void);
202 gid_t getegid(void);
203 int setreuid(uid_t ruid, uid_t euid);
204 int setregid(gid_t rgid, gid_t egid);
205 int getgroups(int size, gid_t list[]);
206 int setgroups(size_t size, const gid_t *list);
207 int fchown(int fd, uid_t owner, gid_t group);
208 int setresuid(uid_t ruid, uid_t euid, uid_t suid);
209 int getresuid(uid_t *ruid, uid_t *euid, uid_t *suid);
210 int setresgid(gid_t rgid, gid_t egid, gid_t sgid);
211 int getresgid(gid_t *rgid, gid_t *egid, gid_t *sgid);
212 int chown(const char *path, uid_t owner, gid_t group);
213 int setuid(uid_t uid);
214 int setgid(gid_t gid);
215 int setfsuid(uid_t fsuid);
216 int setfsgid(uid_t fsgid);
217 long sys_pivot_root(const char __user *new_root, const char __user *put_old);
218 long sys_mincore(unsigned long start, size_t len, unsigned char __user * vec);
219 long sys_madvise(unsigned long start, size_t len, int behavior);
220 long sys_getdents64(4(unsigned int fd, struct linux_dirent64 __user *dirent, unsigned int count);
221 long sys_fcntl64(unsigned int fd, unsigned int cmd, unsigned long arg);
224 long sys_gettid(void);
225 ssize_t sys_readahead(int fd, loff_t offset, size_t count);
226 long sys_setxattr(const char __user *path, const char __user *name, const void __user *value, size_t size, int flags);
227 long sys_lsetxattr(const char __user *path, const char __user *name, const void __user *value, size_t size, int flags);
228 long sys_fsetxattr(int fd, const char __user *name, const void __user *value, size_t size, int flags);
229 ssize_t sys_getxattr(const char __user *path, const char __user *name, void __user *value, size_t size);
230 ssize_t sys_lgetxattr(const char __user *path, const char __user *name, void __user *value, size_t size);
231 ssize_t sys_fgetxattr(int fd, const char __user *name, void __user *value, size_t size);
232 ssize_t sys_listxattr(const char __user *path, char __user *list, size_t size);
233 ssize_t sys_llistxattr(const char __user *path, char __user *list, size_t size);
234 ssize_t sys_flistxattr(int fd, char __user *list, size_t size);
235 long sys_removexattr(const char __user *path, const char __user *name);
236 long sys_lremovexattr(const char __user *path, const char __user *name);
237 long sys_fremovexattr(int fd, const char __user *name);
238 long sys_tkill(int pid, int sig);
239 ssize_t sys_sendfile64(int out_fd, int in_fd, loff_t __user *offset, size_t count);
240 long sys_futex(u32 __user *uaddr, int op, u32 val, struct timespec __user *utime, u32 __user *uaddr2, u32 val3);
241 long sys_sched_setaffinity(pid_t pid, unsigned int len, unsigned long __user *user_mask_ptr);
242 long sys_sched_getaffinity(pid_t pid, unsigned int len, unsigned long __user *user_mask_ptr);
243 int set_thread_area(struct user_desc *u_info);
244 int get_thread_area(struct user_desc *u_info);
245 int sys_io_setup(unsigned nr_reqs, aio_context_t __user *ctx);
246 long sys_io_destroy(aio_context_t ctx);
247 long sys_io_getevents(aio_context_t ctx_id, long min_nr,long nr, struct io_event __user *events, struct timespec __user *timeout);
248 long sys_io_submit(aio_context_t, long, struct iocb __user * __user *);
249 long sys_io_cancel(aio_context_t ctx_id, struct iocb __user *iocb, struct io_event __user *result);
250 int sys_fadvise64(int fd, loff_t offset, size_t len, int advice); 
252 void sys_exit_group(int error_code);
253 long sys_lookup_dcookie(u64 cookie64, char __user *buf, size_t len);
254 long sys_epoll_create(int size);
255 long sys_epoll_ctl(int epfd, int op, int fd, struct epoll_event __user *event);
256 long sys_epoll_wait(int epfd, struct epoll_event __user *events, int maxevents, int timeout);
257 long sys_remap_file_pages(unsigned long start, unsigned long size, unsigned long prot, unsigned long pgoff, unsigned long flags);
258 long sys_set_tid_address(int __user *tidptr);
259 long sys_timer_create(clockid_t which_clock, struct sigevent __user *timer_event_spec, timer_t __user * created_timer_id);
260 long sys_timer_settime(timer_t timer_id, int flags, const struct itimerspec __user *new_setting, struct itimerspec __user *old_setting);
261 long sys_timer_gettime(timer_t timer_id, struct itimerspec __user *setting);
262 missing sys_timer_getoverrun
263 long sys_timer_delete(timer_t timer_id);
264 long sys_clock_settime(clockid_t which_clock, const struct timespec __user *tp);
265 long sys_clock_gettime(clockid_t which_clock, struct timespec __user *tp);
266 long sys_clock_getres(clockid_t which_clock, struct timespec __user *tp);
267 long sys_clock_nanosleep(clockid_t which_clock, int flags, const struct timespec __user *rqtp, struct timespec __user *rmtp);
268 long sys_statfs64(const char __user *path, size_t sz, struct statfs64 __user *buf);
269 long sys_fstatfs64(unsigned int fd, size_t sz, struct statfs64 __user *buf);
270 long sys_tgkill(int tgid, int pid, int sig);
271 long sys_utimes(char __user *filename, struct timeval __user *utimes);
272 long sys_fadvise64_64(int fd, loff_t offset, loff_t len, int advice);
273 missing sys_vserver 
274 long sys_mbind(unsigned long start, unsigned long len, unsigned long mode, unsigned long __user *nmask, unsigned long maxnode, unsigned flags);
275 long sys_get_mempolicy(int __user *policy, unsigned long __user *nmask, unsigned long maxnode, unsigned long addr, unsigned long flags);
276 long sys_set_mempolicy(int mode, unsigned long __user *nmask, unsigned long maxnode);
277 long sys_mq_open(const char __user *name, int oflag, mode_t mode,  struct mq_attr __user *attr);
278 long sys_mq_unlink(const char __user *name);
279 long sys_mq_timedsend(mqd_t mqdes, const char __user *msg_ptr, size_t msg_len, unsigned int msg_prio, const struct timespec __user *abs_timeout);
280 ssize_t sys_mq_timedreceive(mqd_t mqdes, char __user *msg_ptr,  size_t msg_len, unsigned int __user *msg_prio, const struct timespec __user *abs_timeout);
281 long sys_mq_notify(mqd_t mqdes, const struct sigevent __user *notification);
282 long sys_mq_getsetattr(mqd_t mqdes, const struct mq_attr __user *mqstat, struct mq_attr __user *omqstat);
283 long sys_kexec_load(unsigned long entry, unsigned long nr_segments, struct kexec_segment __user *segments, unsigned long flags);
284 long sys_waitid(int which, pid_t pid, struct siginfo __user *infop, int options, struct rusage __user *ru);
285 missing sys_setaltroot 
286 long sys_add_key(const char __user *_type, const char __user *_description, const void __user *_payload, size_t plen, key_serial_t destringid);
287 long sys_request_key(const char __user *_type, const char __user *_description, const char __user *_callout_info, key_serial_t destringid);
288 long sys_keyctl(int cmd, unsigned long arg2, unsigned long arg3, unsigned long arg4, unsigned long arg5);
289 long sys_ioprio_set(int which, int who, int ioprio);
290 long sys_ioprio_get(int which, int who);
291 long sys_inotify_init(void);
292 long sys_inotify_add_watch(int fd, const char __user *path, u32 mask);
293 long sys_inotify_rm_watch(int fd, u32 wd);
294 long sys_migrate_pages(pid_t pid, unsigned long maxnode, const unsigned long __user *from, const unsigned long __user *to); 
295 long sys_openat(int dfd, const char __user *filename, int flags, int mode);
296 long sys_mkdirat(int dfd, const char __user * pathname, int mode);
297 long sys_mknodat(int dfd, const char __user * filename, int mode, unsigned dev);
298 long sys_fchownat(int dfd, const char __user *filename, uid_t user, gid_t group, int flag);
299 long sys_futimesat(int dfd, char __user *filename, struct timeval __user *utimes);
300 long sys_fstatat64(int dfd, char __user *filename, struct stat64 __user *statbuf, int flag);
301 long sys_unlinkat(int dfd, const char __user * pathname, int flag);
302 long sys_renameat(int olddfd, const char __user * oldname, int newdfd, const char __user * newname);
303 long sys_linkat(int olddfd, const char __user *oldname, int newdfd, const char __user *newname, int flags);
304 long sys_symlinkat(const char __user * oldname, int newdfd, const char __user * newname);
305 long sys_readlinkat(int dfd, const char __user *path, char __user *buf, int bufsiz);
306 long sys_fchmodat(int dfd, const char __user * filename, mode_t mode);
307 long sys_faccessat(int dfd, const char __user *filename, int mode);
308 int pselect(int nfds, fd_set *readfds, fd_set *writefds, fd_set *exceptfds, const struct timespec *timeout, const sigset_t *sigmask);
309 int ppoll(struct pollfd *fds, nfds_t nfds, const struct timespec *timeout, const sigset_t *sigmask);
310 long sys_unshare(unsigned long unshare_flags);
311 long sys_set_robust_list(struct robust_list_head __user *head, size_t len);
312 long sys_get_robust_list(int pid, struct robust_list_head __user * __user *head_ptr, size_t __user *len_ptr);
313 long sys_splice(int fd_in, loff_t __user *off_in, int fd_out, loff_t __user *off_out, size_t len, unsigned int flags);
314 long sys_sync_file_range(int fd, loff_t offset, loff_t nbytes, unsigned int flags);
315 long sys_tee(int fdin, int fdout, size_t len, unsigned int flags);
316 long sys_vmsplice(int fd, const struct iovec __user *iov, unsigned long nr_segs, unsigned int flags);
317 long sys_move_pages(pid_t pid, unsigned long nr_pages, const void __user * __user *pages, const int __user *nodes, int __user *status, int flags);
318 long sys_getcpu(unsigned __user *cpu, unsigned __user *node,  struct getcpu_cache __user *cache);
319 long sys_epoll_wait(int epfd, struct epoll_event __user *events, int maxevents, int timeout);
320 long sys_utimensat(int dfd, char __user *filename, struct timespec __user *utimes, int flags);
321 long sys_signalfd(int ufd, sigset_t __user *user_mask, size_t sizemask);
322 long sys_timerfd_create(int clockid, int flags);
323 long sys_eventfd(unsigned int count);
324 long sys_fallocate(int fd, int mode, loff_t offset, loff_t len);
325 long sys_timerfd_settime(int ufd, int flags, const struct itimerspec __user *utmr, struct itimerspec __user *otmr);
326 long sys_timerfd_gettime(int ufd, struct itimerspec __user *otmr); 
327 long sys_signalfd4(int ufd, sigset_t __user *user_mask, size_t sizemask, int flags);
328 long sys_eventfd2(unsigned int count, int flags);
329 long sys_epoll_create1(int flags);
330 long sys_dup3(unsigned int oldfd, unsigned int newfd, int flags); 
331 missing sys_pipe2 
332 long sys_inotify_init1(int flags);
